name: CI

on:
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.5.1"]
        os: ["ubuntu-latest"]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ matrix.poetry-version }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      
      - name: Install project
        run: poetry install --no-interaction

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests --cov-report xml --cov=lightning_boost --disable-warnings

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env: 
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}